$buttonColors: primary $color-primary, info #49AFCD, success #5BB75B, warning #FAA732, danger #DA4F49, inverse #363636;
@mixin button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;
  &:focus,
  &.focus {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 25%);
  }
  &:hover {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 12%);
  }
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 12%);
    &:hover,
    &:focus,
    &.focus {
      color: $color;
      background-color: darken($background, 17%);
      border-color: darken($border, 25%);
    }
  }
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    background-image: none;
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &.focus,
    &:active,
    &.active {
      background-color: $background;
      border-color: $border;
    }
  }
  .badge {
    color: $background;
    background-color: $color;
  }
}
@each $className in $buttonColors {
  $buttonColor: nth($className, 2);
  .btn-#{nth($className, 1)} {
    @include button-variant(#FFF, $buttonColor, darken($buttonColor, 10%));
  }
  .btn-#{nth($className, 1)}.btn-outline {
    color: $buttonColor;
    &:hover,
    &:focus {
      color: #fff;
    }
  }
}
.btn-outline {
  background-color: transparent;
  color: inherit;
  transition: all 0.5s;
}
